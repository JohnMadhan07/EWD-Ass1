{
 "Resources": {
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AliasAttributes": [
     "email"
    ],
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/UserPool/Resource"
   }
  },
  "UserPoolAppClientDD0407EC": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/UserPool/AppClient/Resource"
   }
  },
  "AuthServiceApi8CFB7A21": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Authentication Service RestApi",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "AuthServiceApi"
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Resource"
   }
  },
  "AuthServiceApiDeployment2EA5C028b6459064ebe49e90b09bf847e970a2c7": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Authentication Service RestApi",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "DependsOn": [
    "AuthServiceApiauthconfirmsignupOPTIONS65756E9E",
    "AuthServiceApiauthconfirmsignupPOST5F235FEF",
    "AuthServiceApiauthconfirmsignup537C53E9",
    "AuthServiceApiauthOPTIONS8DFC6C71",
    "AuthServiceApiauthF0516E48",
    "AuthServiceApiauthsigninOPTIONS2A0D0BC4",
    "AuthServiceApiauthsigninPOST7E3E38A0",
    "AuthServiceApiauthsignin17EA6462",
    "AuthServiceApiauthsignoutGET2B2655CD",
    "AuthServiceApiauthsignoutOPTIONSB792AD47",
    "AuthServiceApiauthsignout137525BA",
    "AuthServiceApiauthsignupOPTIONS8DCE3F66",
    "AuthServiceApiauthsignupPOST1848032B",
    "AuthServiceApiauthsignup28B7741A",
    "AuthServiceApiOPTIONS9323A1DA"
   ],
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Deployment/Resource"
   }
  },
  "AuthServiceApiDeploymentStageprodAE29D77D": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AuthServiceApiDeployment2EA5C028b6459064ebe49e90b09bf847e970a2c7"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/DeploymentStage.prod/Resource"
   }
  },
  "AuthServiceApiOPTIONS9323A1DA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AuthServiceApi8CFB7A21",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthF0516E48": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AuthServiceApi8CFB7A21",
      "RootResourceId"
     ]
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/Resource"
   }
  },
  "AuthServiceApiauthOPTIONS8DFC6C71": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignup28B7741A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "PathPart": "signup",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signup/Resource"
   }
  },
  "AuthServiceApiauthsignupOPTIONS8DCE3F66": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignup28B7741A"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signup/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignupPOSTApiPermissionEwdAss1StackAuthAppStackAuthServiceApi2A3333BFPOSTauthsignupE6B85AA6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SignupFn336C4F73",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
       },
       "/POST/auth/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signup/POST/ApiPermission.EwdAss1StackAuthAppStackAuthServiceApi2A3333BF.POST..auth.signup"
   }
  },
  "AuthServiceApiauthsignupPOSTApiPermissionTestEwdAss1StackAuthAppStackAuthServiceApi2A3333BFPOSTauthsignup80EE839D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SignupFn336C4F73",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/test-invoke-stage/POST/auth/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signup/POST/ApiPermission.Test.EwdAss1StackAuthAppStackAuthServiceApi2A3333BF.POST..auth.signup"
   }
  },
  "AuthServiceApiauthsignupPOST1848032B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SignupFn336C4F73",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignup28B7741A"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signup/POST/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignup537C53E9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "PathPart": "confirm_signup",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/confirm_signup/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignupOPTIONS65756E9E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthconfirmsignup537C53E9"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/confirm_signup/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTApiPermissionEwdAss1StackAuthAppStackAuthServiceApi2A3333BFPOSTauthconfirmsignup5D048942": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ConfirmFnA2DFB0E0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
       },
       "/POST/auth/confirm_signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/confirm_signup/POST/ApiPermission.EwdAss1StackAuthAppStackAuthServiceApi2A3333BF.POST..auth.confirm_signup"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTApiPermissionTestEwdAss1StackAuthAppStackAuthServiceApi2A3333BFPOSTauthconfirmsignupD29D61BE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ConfirmFnA2DFB0E0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/test-invoke-stage/POST/auth/confirm_signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/confirm_signup/POST/ApiPermission.Test.EwdAss1StackAuthAppStackAuthServiceApi2A3333BF.POST..auth.confirm_signup"
   }
  },
  "AuthServiceApiauthconfirmsignupPOST5F235FEF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ConfirmFnA2DFB0E0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthconfirmsignup537C53E9"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/confirm_signup/POST/Resource"
   }
  },
  "AuthServiceApiauthsignin17EA6462": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "PathPart": "signin",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signin/Resource"
   }
  },
  "AuthServiceApiauthsigninOPTIONS2A0D0BC4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignin17EA6462"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signin/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsigninPOSTApiPermissionEwdAss1StackAuthAppStackAuthServiceApi2A3333BFPOSTauthsignin9625492F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SigninFnBC3BA31F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
       },
       "/POST/auth/signin"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signin/POST/ApiPermission.EwdAss1StackAuthAppStackAuthServiceApi2A3333BF.POST..auth.signin"
   }
  },
  "AuthServiceApiauthsigninPOSTApiPermissionTestEwdAss1StackAuthAppStackAuthServiceApi2A3333BFPOSTauthsignin334869A6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SigninFnBC3BA31F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/test-invoke-stage/POST/auth/signin"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signin/POST/ApiPermission.Test.EwdAss1StackAuthAppStackAuthServiceApi2A3333BF.POST..auth.signin"
   }
  },
  "AuthServiceApiauthsigninPOST7E3E38A0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SigninFnBC3BA31F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignin17EA6462"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signin/POST/Resource"
   }
  },
  "AuthServiceApiauthsignout137525BA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "PathPart": "signout",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signout/Resource"
   }
  },
  "AuthServiceApiauthsignoutOPTIONSB792AD47": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignout137525BA"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signout/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignoutGETApiPermissionEwdAss1StackAuthAppStackAuthServiceApi2A3333BFGETauthsignout08D0643F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SignoutFnEA9B2CE3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
       },
       "/GET/auth/signout"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signout/GET/ApiPermission.EwdAss1StackAuthAppStackAuthServiceApi2A3333BF.GET..auth.signout"
   }
  },
  "AuthServiceApiauthsignoutGETApiPermissionTestEwdAss1StackAuthAppStackAuthServiceApi2A3333BFGETauthsignoutA06EEC9C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SignoutFnEA9B2CE3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/test-invoke-stage/GET/auth/signout"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signout/GET/ApiPermission.Test.EwdAss1StackAuthAppStackAuthServiceApi2A3333BF.GET..auth.signout"
   }
  },
  "AuthServiceApiauthsignoutGET2B2655CD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SignoutFnEA9B2CE3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignout137525BA"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/AuthServiceApi/Default/auth/signout/GET/Resource"
   }
  },
  "SignupFnServiceRoleB51FBFF1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/SignupFn/ServiceRole/Resource"
   }
  },
  "SignupFn336C4F73": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3ed759077480c2fe0690f65dd26e1637c2612d0f49d8a35b33df66b196abb43d.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "SignupFnServiceRoleB51FBFF1",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 10
   },
   "DependsOn": [
    "SignupFnServiceRoleB51FBFF1"
   ],
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/SignupFn/Resource",
    "aws:asset:path": "D:\\TypeScript\\EWD-Ass1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ConfirmFnServiceRole1655CA55": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/ConfirmFn/ServiceRole/Resource"
   }
  },
  "ConfirmFnA2DFB0E0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "bc2371f9ae5f1c76f30db0c597c431eb924f935fcdb4ac8ed284df112f02cd52.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "ConfirmFnServiceRole1655CA55",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 10
   },
   "DependsOn": [
    "ConfirmFnServiceRole1655CA55"
   ],
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/ConfirmFn/Resource",
    "aws:asset:path": "D:\\TypeScript\\EWD-Ass1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SigninFnServiceRole084C9885": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/SigninFn/ServiceRole/Resource"
   }
  },
  "SigninFnBC3BA31F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ea9ed870d69dbc6d5f78486bc15ecdffc2df4636354745cd49c926373754c567.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "SigninFnServiceRole084C9885",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 10
   },
   "DependsOn": [
    "SigninFnServiceRole084C9885"
   ],
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/SigninFn/Resource",
    "aws:asset:path": "D:\\TypeScript\\EWD-Ass1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SignoutFnServiceRole3AF7B732": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/SignoutFn/ServiceRole/Resource"
   }
  },
  "SignoutFnEA9B2CE3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4667a9ca08ba1a065f0bf500f211a54cf108ba795f0b7b118e740b3173c28403.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "SignoutFnServiceRole3AF7B732",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 10
   },
   "DependsOn": [
    "SignoutFnServiceRole3AF7B732"
   ],
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/SignoutFn/Resource",
    "aws:asset:path": "D:\\TypeScript\\EWD-Ass1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PzU7DMBCEn6V3Z4FyybUN4laoijhHrrOETRw7ym6oqijvjp0fiGRpvp0dW+M9pCk87vSNE1PUiaUrDB+iTa2ClQ/Gl47Ew/DJ2J29tyr7cn+8QmYJnWxXszMq3VKpBW/6DsMFWQ4txdiKL9haf2+Wy5spVCgxejOEvO87g0fNqE4o376Iy4XW7fLyxKOyurkWGoZgnrFriJm8i5HX3hkJvEZy5wusGN4mWbeKdBM6ezs/G3RU/JxrZhSGQ5Qww7E3NUrsNcbcey9tL/+Nplz8A7lyWy9y5l1Bc5HYACp++HlKIZz9rmKipOudUINwmfUXtpE9hqsBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "EwdAss1Stack/AuthAppStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "UserPoolIdOutput": {
   "Description": "User Pool ID",
   "Value": {
    "Ref": "UserPool6BA7E5F2"
   }
  },
  "UserPoolClientIdOutput": {
   "Description": "User Pool Client ID",
   "Value": {
    "Ref": "UserPoolAppClientDD0407EC"
   }
  },
  "AuthServiceApiEndpoint7E6B8279": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AuthServiceApi8CFB7A21"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}